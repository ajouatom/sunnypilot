#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4099822328291796061) {
   out_4099822328291796061[0] = 0;
   out_4099822328291796061[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4099822328291796061[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4099822328291796061[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4099822328291796061[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4099822328291796061[5] = -sin(in_vec[1]);
   out_4099822328291796061[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4099822328291796061[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4099822328291796061[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4099822328291796061[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4099822328291796061[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4099822328291796061[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4099822328291796061[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4099822328291796061[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4099822328291796061[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4099822328291796061[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4099822328291796061[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4099822328291796061[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2280464617631615560) {
   out_2280464617631615560[0] = delta_x[0] + nom_x[0];
   out_2280464617631615560[1] = delta_x[1] + nom_x[1];
   out_2280464617631615560[2] = delta_x[2] + nom_x[2];
   out_2280464617631615560[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2280464617631615560[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2280464617631615560[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2280464617631615560[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2280464617631615560[7] = delta_x[6] + nom_x[7];
   out_2280464617631615560[8] = delta_x[7] + nom_x[8];
   out_2280464617631615560[9] = delta_x[8] + nom_x[9];
   out_2280464617631615560[10] = delta_x[9] + nom_x[10];
   out_2280464617631615560[11] = delta_x[10] + nom_x[11];
   out_2280464617631615560[12] = delta_x[11] + nom_x[12];
   out_2280464617631615560[13] = delta_x[12] + nom_x[13];
   out_2280464617631615560[14] = delta_x[13] + nom_x[14];
   out_2280464617631615560[15] = delta_x[14] + nom_x[15];
   out_2280464617631615560[16] = delta_x[15] + nom_x[16];
   out_2280464617631615560[17] = delta_x[16] + nom_x[17];
   out_2280464617631615560[18] = delta_x[17] + nom_x[18];
   out_2280464617631615560[19] = delta_x[18] + nom_x[19];
   out_2280464617631615560[20] = delta_x[19] + nom_x[20];
   out_2280464617631615560[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9046333686982459057) {
   out_9046333686982459057[0] = -nom_x[0] + true_x[0];
   out_9046333686982459057[1] = -nom_x[1] + true_x[1];
   out_9046333686982459057[2] = -nom_x[2] + true_x[2];
   out_9046333686982459057[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9046333686982459057[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9046333686982459057[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9046333686982459057[6] = -nom_x[7] + true_x[7];
   out_9046333686982459057[7] = -nom_x[8] + true_x[8];
   out_9046333686982459057[8] = -nom_x[9] + true_x[9];
   out_9046333686982459057[9] = -nom_x[10] + true_x[10];
   out_9046333686982459057[10] = -nom_x[11] + true_x[11];
   out_9046333686982459057[11] = -nom_x[12] + true_x[12];
   out_9046333686982459057[12] = -nom_x[13] + true_x[13];
   out_9046333686982459057[13] = -nom_x[14] + true_x[14];
   out_9046333686982459057[14] = -nom_x[15] + true_x[15];
   out_9046333686982459057[15] = -nom_x[16] + true_x[16];
   out_9046333686982459057[16] = -nom_x[17] + true_x[17];
   out_9046333686982459057[17] = -nom_x[18] + true_x[18];
   out_9046333686982459057[18] = -nom_x[19] + true_x[19];
   out_9046333686982459057[19] = -nom_x[20] + true_x[20];
   out_9046333686982459057[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3010053490760277106) {
   out_3010053490760277106[0] = 1.0;
   out_3010053490760277106[1] = 0;
   out_3010053490760277106[2] = 0;
   out_3010053490760277106[3] = 0;
   out_3010053490760277106[4] = 0;
   out_3010053490760277106[5] = 0;
   out_3010053490760277106[6] = 0;
   out_3010053490760277106[7] = 0;
   out_3010053490760277106[8] = 0;
   out_3010053490760277106[9] = 0;
   out_3010053490760277106[10] = 0;
   out_3010053490760277106[11] = 0;
   out_3010053490760277106[12] = 0;
   out_3010053490760277106[13] = 0;
   out_3010053490760277106[14] = 0;
   out_3010053490760277106[15] = 0;
   out_3010053490760277106[16] = 0;
   out_3010053490760277106[17] = 0;
   out_3010053490760277106[18] = 0;
   out_3010053490760277106[19] = 0;
   out_3010053490760277106[20] = 0;
   out_3010053490760277106[21] = 0;
   out_3010053490760277106[22] = 1.0;
   out_3010053490760277106[23] = 0;
   out_3010053490760277106[24] = 0;
   out_3010053490760277106[25] = 0;
   out_3010053490760277106[26] = 0;
   out_3010053490760277106[27] = 0;
   out_3010053490760277106[28] = 0;
   out_3010053490760277106[29] = 0;
   out_3010053490760277106[30] = 0;
   out_3010053490760277106[31] = 0;
   out_3010053490760277106[32] = 0;
   out_3010053490760277106[33] = 0;
   out_3010053490760277106[34] = 0;
   out_3010053490760277106[35] = 0;
   out_3010053490760277106[36] = 0;
   out_3010053490760277106[37] = 0;
   out_3010053490760277106[38] = 0;
   out_3010053490760277106[39] = 0;
   out_3010053490760277106[40] = 0;
   out_3010053490760277106[41] = 0;
   out_3010053490760277106[42] = 0;
   out_3010053490760277106[43] = 0;
   out_3010053490760277106[44] = 1.0;
   out_3010053490760277106[45] = 0;
   out_3010053490760277106[46] = 0;
   out_3010053490760277106[47] = 0;
   out_3010053490760277106[48] = 0;
   out_3010053490760277106[49] = 0;
   out_3010053490760277106[50] = 0;
   out_3010053490760277106[51] = 0;
   out_3010053490760277106[52] = 0;
   out_3010053490760277106[53] = 0;
   out_3010053490760277106[54] = 0;
   out_3010053490760277106[55] = 0;
   out_3010053490760277106[56] = 0;
   out_3010053490760277106[57] = 0;
   out_3010053490760277106[58] = 0;
   out_3010053490760277106[59] = 0;
   out_3010053490760277106[60] = 0;
   out_3010053490760277106[61] = 0;
   out_3010053490760277106[62] = 0;
   out_3010053490760277106[63] = 0;
   out_3010053490760277106[64] = 0;
   out_3010053490760277106[65] = 0;
   out_3010053490760277106[66] = -0.5*state[4];
   out_3010053490760277106[67] = -0.5*state[5];
   out_3010053490760277106[68] = -0.5*state[6];
   out_3010053490760277106[69] = 0;
   out_3010053490760277106[70] = 0;
   out_3010053490760277106[71] = 0;
   out_3010053490760277106[72] = 0;
   out_3010053490760277106[73] = 0;
   out_3010053490760277106[74] = 0;
   out_3010053490760277106[75] = 0;
   out_3010053490760277106[76] = 0;
   out_3010053490760277106[77] = 0;
   out_3010053490760277106[78] = 0;
   out_3010053490760277106[79] = 0;
   out_3010053490760277106[80] = 0;
   out_3010053490760277106[81] = 0;
   out_3010053490760277106[82] = 0;
   out_3010053490760277106[83] = 0;
   out_3010053490760277106[84] = 0;
   out_3010053490760277106[85] = 0;
   out_3010053490760277106[86] = 0;
   out_3010053490760277106[87] = 0.5*state[3];
   out_3010053490760277106[88] = 0.5*state[6];
   out_3010053490760277106[89] = -0.5*state[5];
   out_3010053490760277106[90] = 0;
   out_3010053490760277106[91] = 0;
   out_3010053490760277106[92] = 0;
   out_3010053490760277106[93] = 0;
   out_3010053490760277106[94] = 0;
   out_3010053490760277106[95] = 0;
   out_3010053490760277106[96] = 0;
   out_3010053490760277106[97] = 0;
   out_3010053490760277106[98] = 0;
   out_3010053490760277106[99] = 0;
   out_3010053490760277106[100] = 0;
   out_3010053490760277106[101] = 0;
   out_3010053490760277106[102] = 0;
   out_3010053490760277106[103] = 0;
   out_3010053490760277106[104] = 0;
   out_3010053490760277106[105] = 0;
   out_3010053490760277106[106] = 0;
   out_3010053490760277106[107] = 0;
   out_3010053490760277106[108] = -0.5*state[6];
   out_3010053490760277106[109] = 0.5*state[3];
   out_3010053490760277106[110] = 0.5*state[4];
   out_3010053490760277106[111] = 0;
   out_3010053490760277106[112] = 0;
   out_3010053490760277106[113] = 0;
   out_3010053490760277106[114] = 0;
   out_3010053490760277106[115] = 0;
   out_3010053490760277106[116] = 0;
   out_3010053490760277106[117] = 0;
   out_3010053490760277106[118] = 0;
   out_3010053490760277106[119] = 0;
   out_3010053490760277106[120] = 0;
   out_3010053490760277106[121] = 0;
   out_3010053490760277106[122] = 0;
   out_3010053490760277106[123] = 0;
   out_3010053490760277106[124] = 0;
   out_3010053490760277106[125] = 0;
   out_3010053490760277106[126] = 0;
   out_3010053490760277106[127] = 0;
   out_3010053490760277106[128] = 0;
   out_3010053490760277106[129] = 0.5*state[5];
   out_3010053490760277106[130] = -0.5*state[4];
   out_3010053490760277106[131] = 0.5*state[3];
   out_3010053490760277106[132] = 0;
   out_3010053490760277106[133] = 0;
   out_3010053490760277106[134] = 0;
   out_3010053490760277106[135] = 0;
   out_3010053490760277106[136] = 0;
   out_3010053490760277106[137] = 0;
   out_3010053490760277106[138] = 0;
   out_3010053490760277106[139] = 0;
   out_3010053490760277106[140] = 0;
   out_3010053490760277106[141] = 0;
   out_3010053490760277106[142] = 0;
   out_3010053490760277106[143] = 0;
   out_3010053490760277106[144] = 0;
   out_3010053490760277106[145] = 0;
   out_3010053490760277106[146] = 0;
   out_3010053490760277106[147] = 0;
   out_3010053490760277106[148] = 0;
   out_3010053490760277106[149] = 0;
   out_3010053490760277106[150] = 0;
   out_3010053490760277106[151] = 0;
   out_3010053490760277106[152] = 0;
   out_3010053490760277106[153] = 1.0;
   out_3010053490760277106[154] = 0;
   out_3010053490760277106[155] = 0;
   out_3010053490760277106[156] = 0;
   out_3010053490760277106[157] = 0;
   out_3010053490760277106[158] = 0;
   out_3010053490760277106[159] = 0;
   out_3010053490760277106[160] = 0;
   out_3010053490760277106[161] = 0;
   out_3010053490760277106[162] = 0;
   out_3010053490760277106[163] = 0;
   out_3010053490760277106[164] = 0;
   out_3010053490760277106[165] = 0;
   out_3010053490760277106[166] = 0;
   out_3010053490760277106[167] = 0;
   out_3010053490760277106[168] = 0;
   out_3010053490760277106[169] = 0;
   out_3010053490760277106[170] = 0;
   out_3010053490760277106[171] = 0;
   out_3010053490760277106[172] = 0;
   out_3010053490760277106[173] = 0;
   out_3010053490760277106[174] = 0;
   out_3010053490760277106[175] = 1.0;
   out_3010053490760277106[176] = 0;
   out_3010053490760277106[177] = 0;
   out_3010053490760277106[178] = 0;
   out_3010053490760277106[179] = 0;
   out_3010053490760277106[180] = 0;
   out_3010053490760277106[181] = 0;
   out_3010053490760277106[182] = 0;
   out_3010053490760277106[183] = 0;
   out_3010053490760277106[184] = 0;
   out_3010053490760277106[185] = 0;
   out_3010053490760277106[186] = 0;
   out_3010053490760277106[187] = 0;
   out_3010053490760277106[188] = 0;
   out_3010053490760277106[189] = 0;
   out_3010053490760277106[190] = 0;
   out_3010053490760277106[191] = 0;
   out_3010053490760277106[192] = 0;
   out_3010053490760277106[193] = 0;
   out_3010053490760277106[194] = 0;
   out_3010053490760277106[195] = 0;
   out_3010053490760277106[196] = 0;
   out_3010053490760277106[197] = 1.0;
   out_3010053490760277106[198] = 0;
   out_3010053490760277106[199] = 0;
   out_3010053490760277106[200] = 0;
   out_3010053490760277106[201] = 0;
   out_3010053490760277106[202] = 0;
   out_3010053490760277106[203] = 0;
   out_3010053490760277106[204] = 0;
   out_3010053490760277106[205] = 0;
   out_3010053490760277106[206] = 0;
   out_3010053490760277106[207] = 0;
   out_3010053490760277106[208] = 0;
   out_3010053490760277106[209] = 0;
   out_3010053490760277106[210] = 0;
   out_3010053490760277106[211] = 0;
   out_3010053490760277106[212] = 0;
   out_3010053490760277106[213] = 0;
   out_3010053490760277106[214] = 0;
   out_3010053490760277106[215] = 0;
   out_3010053490760277106[216] = 0;
   out_3010053490760277106[217] = 0;
   out_3010053490760277106[218] = 0;
   out_3010053490760277106[219] = 1.0;
   out_3010053490760277106[220] = 0;
   out_3010053490760277106[221] = 0;
   out_3010053490760277106[222] = 0;
   out_3010053490760277106[223] = 0;
   out_3010053490760277106[224] = 0;
   out_3010053490760277106[225] = 0;
   out_3010053490760277106[226] = 0;
   out_3010053490760277106[227] = 0;
   out_3010053490760277106[228] = 0;
   out_3010053490760277106[229] = 0;
   out_3010053490760277106[230] = 0;
   out_3010053490760277106[231] = 0;
   out_3010053490760277106[232] = 0;
   out_3010053490760277106[233] = 0;
   out_3010053490760277106[234] = 0;
   out_3010053490760277106[235] = 0;
   out_3010053490760277106[236] = 0;
   out_3010053490760277106[237] = 0;
   out_3010053490760277106[238] = 0;
   out_3010053490760277106[239] = 0;
   out_3010053490760277106[240] = 0;
   out_3010053490760277106[241] = 1.0;
   out_3010053490760277106[242] = 0;
   out_3010053490760277106[243] = 0;
   out_3010053490760277106[244] = 0;
   out_3010053490760277106[245] = 0;
   out_3010053490760277106[246] = 0;
   out_3010053490760277106[247] = 0;
   out_3010053490760277106[248] = 0;
   out_3010053490760277106[249] = 0;
   out_3010053490760277106[250] = 0;
   out_3010053490760277106[251] = 0;
   out_3010053490760277106[252] = 0;
   out_3010053490760277106[253] = 0;
   out_3010053490760277106[254] = 0;
   out_3010053490760277106[255] = 0;
   out_3010053490760277106[256] = 0;
   out_3010053490760277106[257] = 0;
   out_3010053490760277106[258] = 0;
   out_3010053490760277106[259] = 0;
   out_3010053490760277106[260] = 0;
   out_3010053490760277106[261] = 0;
   out_3010053490760277106[262] = 0;
   out_3010053490760277106[263] = 1.0;
   out_3010053490760277106[264] = 0;
   out_3010053490760277106[265] = 0;
   out_3010053490760277106[266] = 0;
   out_3010053490760277106[267] = 0;
   out_3010053490760277106[268] = 0;
   out_3010053490760277106[269] = 0;
   out_3010053490760277106[270] = 0;
   out_3010053490760277106[271] = 0;
   out_3010053490760277106[272] = 0;
   out_3010053490760277106[273] = 0;
   out_3010053490760277106[274] = 0;
   out_3010053490760277106[275] = 0;
   out_3010053490760277106[276] = 0;
   out_3010053490760277106[277] = 0;
   out_3010053490760277106[278] = 0;
   out_3010053490760277106[279] = 0;
   out_3010053490760277106[280] = 0;
   out_3010053490760277106[281] = 0;
   out_3010053490760277106[282] = 0;
   out_3010053490760277106[283] = 0;
   out_3010053490760277106[284] = 0;
   out_3010053490760277106[285] = 1.0;
   out_3010053490760277106[286] = 0;
   out_3010053490760277106[287] = 0;
   out_3010053490760277106[288] = 0;
   out_3010053490760277106[289] = 0;
   out_3010053490760277106[290] = 0;
   out_3010053490760277106[291] = 0;
   out_3010053490760277106[292] = 0;
   out_3010053490760277106[293] = 0;
   out_3010053490760277106[294] = 0;
   out_3010053490760277106[295] = 0;
   out_3010053490760277106[296] = 0;
   out_3010053490760277106[297] = 0;
   out_3010053490760277106[298] = 0;
   out_3010053490760277106[299] = 0;
   out_3010053490760277106[300] = 0;
   out_3010053490760277106[301] = 0;
   out_3010053490760277106[302] = 0;
   out_3010053490760277106[303] = 0;
   out_3010053490760277106[304] = 0;
   out_3010053490760277106[305] = 0;
   out_3010053490760277106[306] = 0;
   out_3010053490760277106[307] = 1.0;
   out_3010053490760277106[308] = 0;
   out_3010053490760277106[309] = 0;
   out_3010053490760277106[310] = 0;
   out_3010053490760277106[311] = 0;
   out_3010053490760277106[312] = 0;
   out_3010053490760277106[313] = 0;
   out_3010053490760277106[314] = 0;
   out_3010053490760277106[315] = 0;
   out_3010053490760277106[316] = 0;
   out_3010053490760277106[317] = 0;
   out_3010053490760277106[318] = 0;
   out_3010053490760277106[319] = 0;
   out_3010053490760277106[320] = 0;
   out_3010053490760277106[321] = 0;
   out_3010053490760277106[322] = 0;
   out_3010053490760277106[323] = 0;
   out_3010053490760277106[324] = 0;
   out_3010053490760277106[325] = 0;
   out_3010053490760277106[326] = 0;
   out_3010053490760277106[327] = 0;
   out_3010053490760277106[328] = 0;
   out_3010053490760277106[329] = 1.0;
   out_3010053490760277106[330] = 0;
   out_3010053490760277106[331] = 0;
   out_3010053490760277106[332] = 0;
   out_3010053490760277106[333] = 0;
   out_3010053490760277106[334] = 0;
   out_3010053490760277106[335] = 0;
   out_3010053490760277106[336] = 0;
   out_3010053490760277106[337] = 0;
   out_3010053490760277106[338] = 0;
   out_3010053490760277106[339] = 0;
   out_3010053490760277106[340] = 0;
   out_3010053490760277106[341] = 0;
   out_3010053490760277106[342] = 0;
   out_3010053490760277106[343] = 0;
   out_3010053490760277106[344] = 0;
   out_3010053490760277106[345] = 0;
   out_3010053490760277106[346] = 0;
   out_3010053490760277106[347] = 0;
   out_3010053490760277106[348] = 0;
   out_3010053490760277106[349] = 0;
   out_3010053490760277106[350] = 0;
   out_3010053490760277106[351] = 1.0;
   out_3010053490760277106[352] = 0;
   out_3010053490760277106[353] = 0;
   out_3010053490760277106[354] = 0;
   out_3010053490760277106[355] = 0;
   out_3010053490760277106[356] = 0;
   out_3010053490760277106[357] = 0;
   out_3010053490760277106[358] = 0;
   out_3010053490760277106[359] = 0;
   out_3010053490760277106[360] = 0;
   out_3010053490760277106[361] = 0;
   out_3010053490760277106[362] = 0;
   out_3010053490760277106[363] = 0;
   out_3010053490760277106[364] = 0;
   out_3010053490760277106[365] = 0;
   out_3010053490760277106[366] = 0;
   out_3010053490760277106[367] = 0;
   out_3010053490760277106[368] = 0;
   out_3010053490760277106[369] = 0;
   out_3010053490760277106[370] = 0;
   out_3010053490760277106[371] = 0;
   out_3010053490760277106[372] = 0;
   out_3010053490760277106[373] = 1.0;
   out_3010053490760277106[374] = 0;
   out_3010053490760277106[375] = 0;
   out_3010053490760277106[376] = 0;
   out_3010053490760277106[377] = 0;
   out_3010053490760277106[378] = 0;
   out_3010053490760277106[379] = 0;
   out_3010053490760277106[380] = 0;
   out_3010053490760277106[381] = 0;
   out_3010053490760277106[382] = 0;
   out_3010053490760277106[383] = 0;
   out_3010053490760277106[384] = 0;
   out_3010053490760277106[385] = 0;
   out_3010053490760277106[386] = 0;
   out_3010053490760277106[387] = 0;
   out_3010053490760277106[388] = 0;
   out_3010053490760277106[389] = 0;
   out_3010053490760277106[390] = 0;
   out_3010053490760277106[391] = 0;
   out_3010053490760277106[392] = 0;
   out_3010053490760277106[393] = 0;
   out_3010053490760277106[394] = 0;
   out_3010053490760277106[395] = 1.0;
   out_3010053490760277106[396] = 0;
   out_3010053490760277106[397] = 0;
   out_3010053490760277106[398] = 0;
   out_3010053490760277106[399] = 0;
   out_3010053490760277106[400] = 0;
   out_3010053490760277106[401] = 0;
   out_3010053490760277106[402] = 0;
   out_3010053490760277106[403] = 0;
   out_3010053490760277106[404] = 0;
   out_3010053490760277106[405] = 0;
   out_3010053490760277106[406] = 0;
   out_3010053490760277106[407] = 0;
   out_3010053490760277106[408] = 0;
   out_3010053490760277106[409] = 0;
   out_3010053490760277106[410] = 0;
   out_3010053490760277106[411] = 0;
   out_3010053490760277106[412] = 0;
   out_3010053490760277106[413] = 0;
   out_3010053490760277106[414] = 0;
   out_3010053490760277106[415] = 0;
   out_3010053490760277106[416] = 0;
   out_3010053490760277106[417] = 1.0;
   out_3010053490760277106[418] = 0;
   out_3010053490760277106[419] = 0;
   out_3010053490760277106[420] = 0;
   out_3010053490760277106[421] = 0;
   out_3010053490760277106[422] = 0;
   out_3010053490760277106[423] = 0;
   out_3010053490760277106[424] = 0;
   out_3010053490760277106[425] = 0;
   out_3010053490760277106[426] = 0;
   out_3010053490760277106[427] = 0;
   out_3010053490760277106[428] = 0;
   out_3010053490760277106[429] = 0;
   out_3010053490760277106[430] = 0;
   out_3010053490760277106[431] = 0;
   out_3010053490760277106[432] = 0;
   out_3010053490760277106[433] = 0;
   out_3010053490760277106[434] = 0;
   out_3010053490760277106[435] = 0;
   out_3010053490760277106[436] = 0;
   out_3010053490760277106[437] = 0;
   out_3010053490760277106[438] = 0;
   out_3010053490760277106[439] = 1.0;
   out_3010053490760277106[440] = 0;
   out_3010053490760277106[441] = 0;
   out_3010053490760277106[442] = 0;
   out_3010053490760277106[443] = 0;
   out_3010053490760277106[444] = 0;
   out_3010053490760277106[445] = 0;
   out_3010053490760277106[446] = 0;
   out_3010053490760277106[447] = 0;
   out_3010053490760277106[448] = 0;
   out_3010053490760277106[449] = 0;
   out_3010053490760277106[450] = 0;
   out_3010053490760277106[451] = 0;
   out_3010053490760277106[452] = 0;
   out_3010053490760277106[453] = 0;
   out_3010053490760277106[454] = 0;
   out_3010053490760277106[455] = 0;
   out_3010053490760277106[456] = 0;
   out_3010053490760277106[457] = 0;
   out_3010053490760277106[458] = 0;
   out_3010053490760277106[459] = 0;
   out_3010053490760277106[460] = 0;
   out_3010053490760277106[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_57496166683870770) {
   out_57496166683870770[0] = dt*state[7] + state[0];
   out_57496166683870770[1] = dt*state[8] + state[1];
   out_57496166683870770[2] = dt*state[9] + state[2];
   out_57496166683870770[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_57496166683870770[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_57496166683870770[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_57496166683870770[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_57496166683870770[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_57496166683870770[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_57496166683870770[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_57496166683870770[10] = state[10];
   out_57496166683870770[11] = state[11];
   out_57496166683870770[12] = state[12];
   out_57496166683870770[13] = state[13];
   out_57496166683870770[14] = state[14];
   out_57496166683870770[15] = state[15];
   out_57496166683870770[16] = state[16];
   out_57496166683870770[17] = state[17];
   out_57496166683870770[18] = state[18];
   out_57496166683870770[19] = state[19];
   out_57496166683870770[20] = state[20];
   out_57496166683870770[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4161128495582430796) {
   out_4161128495582430796[0] = 1;
   out_4161128495582430796[1] = 0;
   out_4161128495582430796[2] = 0;
   out_4161128495582430796[3] = 0;
   out_4161128495582430796[4] = 0;
   out_4161128495582430796[5] = 0;
   out_4161128495582430796[6] = dt;
   out_4161128495582430796[7] = 0;
   out_4161128495582430796[8] = 0;
   out_4161128495582430796[9] = 0;
   out_4161128495582430796[10] = 0;
   out_4161128495582430796[11] = 0;
   out_4161128495582430796[12] = 0;
   out_4161128495582430796[13] = 0;
   out_4161128495582430796[14] = 0;
   out_4161128495582430796[15] = 0;
   out_4161128495582430796[16] = 0;
   out_4161128495582430796[17] = 0;
   out_4161128495582430796[18] = 0;
   out_4161128495582430796[19] = 0;
   out_4161128495582430796[20] = 0;
   out_4161128495582430796[21] = 0;
   out_4161128495582430796[22] = 1;
   out_4161128495582430796[23] = 0;
   out_4161128495582430796[24] = 0;
   out_4161128495582430796[25] = 0;
   out_4161128495582430796[26] = 0;
   out_4161128495582430796[27] = 0;
   out_4161128495582430796[28] = dt;
   out_4161128495582430796[29] = 0;
   out_4161128495582430796[30] = 0;
   out_4161128495582430796[31] = 0;
   out_4161128495582430796[32] = 0;
   out_4161128495582430796[33] = 0;
   out_4161128495582430796[34] = 0;
   out_4161128495582430796[35] = 0;
   out_4161128495582430796[36] = 0;
   out_4161128495582430796[37] = 0;
   out_4161128495582430796[38] = 0;
   out_4161128495582430796[39] = 0;
   out_4161128495582430796[40] = 0;
   out_4161128495582430796[41] = 0;
   out_4161128495582430796[42] = 0;
   out_4161128495582430796[43] = 0;
   out_4161128495582430796[44] = 1;
   out_4161128495582430796[45] = 0;
   out_4161128495582430796[46] = 0;
   out_4161128495582430796[47] = 0;
   out_4161128495582430796[48] = 0;
   out_4161128495582430796[49] = 0;
   out_4161128495582430796[50] = dt;
   out_4161128495582430796[51] = 0;
   out_4161128495582430796[52] = 0;
   out_4161128495582430796[53] = 0;
   out_4161128495582430796[54] = 0;
   out_4161128495582430796[55] = 0;
   out_4161128495582430796[56] = 0;
   out_4161128495582430796[57] = 0;
   out_4161128495582430796[58] = 0;
   out_4161128495582430796[59] = 0;
   out_4161128495582430796[60] = 0;
   out_4161128495582430796[61] = 0;
   out_4161128495582430796[62] = 0;
   out_4161128495582430796[63] = 0;
   out_4161128495582430796[64] = 0;
   out_4161128495582430796[65] = 0;
   out_4161128495582430796[66] = 1;
   out_4161128495582430796[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4161128495582430796[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4161128495582430796[69] = 0;
   out_4161128495582430796[70] = 0;
   out_4161128495582430796[71] = 0;
   out_4161128495582430796[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4161128495582430796[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4161128495582430796[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4161128495582430796[75] = 0;
   out_4161128495582430796[76] = 0;
   out_4161128495582430796[77] = 0;
   out_4161128495582430796[78] = 0;
   out_4161128495582430796[79] = 0;
   out_4161128495582430796[80] = 0;
   out_4161128495582430796[81] = 0;
   out_4161128495582430796[82] = 0;
   out_4161128495582430796[83] = 0;
   out_4161128495582430796[84] = 0;
   out_4161128495582430796[85] = 0;
   out_4161128495582430796[86] = 0;
   out_4161128495582430796[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4161128495582430796[88] = 1;
   out_4161128495582430796[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4161128495582430796[90] = 0;
   out_4161128495582430796[91] = 0;
   out_4161128495582430796[92] = 0;
   out_4161128495582430796[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4161128495582430796[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4161128495582430796[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4161128495582430796[96] = 0;
   out_4161128495582430796[97] = 0;
   out_4161128495582430796[98] = 0;
   out_4161128495582430796[99] = 0;
   out_4161128495582430796[100] = 0;
   out_4161128495582430796[101] = 0;
   out_4161128495582430796[102] = 0;
   out_4161128495582430796[103] = 0;
   out_4161128495582430796[104] = 0;
   out_4161128495582430796[105] = 0;
   out_4161128495582430796[106] = 0;
   out_4161128495582430796[107] = 0;
   out_4161128495582430796[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4161128495582430796[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4161128495582430796[110] = 1;
   out_4161128495582430796[111] = 0;
   out_4161128495582430796[112] = 0;
   out_4161128495582430796[113] = 0;
   out_4161128495582430796[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4161128495582430796[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4161128495582430796[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4161128495582430796[117] = 0;
   out_4161128495582430796[118] = 0;
   out_4161128495582430796[119] = 0;
   out_4161128495582430796[120] = 0;
   out_4161128495582430796[121] = 0;
   out_4161128495582430796[122] = 0;
   out_4161128495582430796[123] = 0;
   out_4161128495582430796[124] = 0;
   out_4161128495582430796[125] = 0;
   out_4161128495582430796[126] = 0;
   out_4161128495582430796[127] = 0;
   out_4161128495582430796[128] = 0;
   out_4161128495582430796[129] = 0;
   out_4161128495582430796[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4161128495582430796[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4161128495582430796[132] = 1;
   out_4161128495582430796[133] = 0;
   out_4161128495582430796[134] = 0;
   out_4161128495582430796[135] = 0;
   out_4161128495582430796[136] = 0;
   out_4161128495582430796[137] = 0;
   out_4161128495582430796[138] = 0;
   out_4161128495582430796[139] = 0;
   out_4161128495582430796[140] = 0;
   out_4161128495582430796[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4161128495582430796[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4161128495582430796[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4161128495582430796[144] = 0;
   out_4161128495582430796[145] = 0;
   out_4161128495582430796[146] = 0;
   out_4161128495582430796[147] = 0;
   out_4161128495582430796[148] = 0;
   out_4161128495582430796[149] = 0;
   out_4161128495582430796[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4161128495582430796[151] = 0;
   out_4161128495582430796[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4161128495582430796[153] = 0;
   out_4161128495582430796[154] = 1;
   out_4161128495582430796[155] = 0;
   out_4161128495582430796[156] = 0;
   out_4161128495582430796[157] = 0;
   out_4161128495582430796[158] = 0;
   out_4161128495582430796[159] = 0;
   out_4161128495582430796[160] = 0;
   out_4161128495582430796[161] = 0;
   out_4161128495582430796[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4161128495582430796[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4161128495582430796[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4161128495582430796[165] = 0;
   out_4161128495582430796[166] = 0;
   out_4161128495582430796[167] = 0;
   out_4161128495582430796[168] = 0;
   out_4161128495582430796[169] = 0;
   out_4161128495582430796[170] = 0;
   out_4161128495582430796[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4161128495582430796[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4161128495582430796[173] = 0;
   out_4161128495582430796[174] = 0;
   out_4161128495582430796[175] = 0;
   out_4161128495582430796[176] = 1;
   out_4161128495582430796[177] = 0;
   out_4161128495582430796[178] = 0;
   out_4161128495582430796[179] = 0;
   out_4161128495582430796[180] = 0;
   out_4161128495582430796[181] = 0;
   out_4161128495582430796[182] = 0;
   out_4161128495582430796[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4161128495582430796[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4161128495582430796[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4161128495582430796[186] = 0;
   out_4161128495582430796[187] = 0;
   out_4161128495582430796[188] = 0;
   out_4161128495582430796[189] = 0;
   out_4161128495582430796[190] = 0;
   out_4161128495582430796[191] = 0;
   out_4161128495582430796[192] = 0;
   out_4161128495582430796[193] = 0;
   out_4161128495582430796[194] = 0;
   out_4161128495582430796[195] = 0;
   out_4161128495582430796[196] = 0;
   out_4161128495582430796[197] = 0;
   out_4161128495582430796[198] = 1;
   out_4161128495582430796[199] = 0;
   out_4161128495582430796[200] = 0;
   out_4161128495582430796[201] = 0;
   out_4161128495582430796[202] = 0;
   out_4161128495582430796[203] = 0;
   out_4161128495582430796[204] = 0;
   out_4161128495582430796[205] = 0;
   out_4161128495582430796[206] = 0;
   out_4161128495582430796[207] = 0;
   out_4161128495582430796[208] = 0;
   out_4161128495582430796[209] = 0;
   out_4161128495582430796[210] = 0;
   out_4161128495582430796[211] = 0;
   out_4161128495582430796[212] = 0;
   out_4161128495582430796[213] = 0;
   out_4161128495582430796[214] = 0;
   out_4161128495582430796[215] = 0;
   out_4161128495582430796[216] = 0;
   out_4161128495582430796[217] = 0;
   out_4161128495582430796[218] = 0;
   out_4161128495582430796[219] = 0;
   out_4161128495582430796[220] = 1;
   out_4161128495582430796[221] = 0;
   out_4161128495582430796[222] = 0;
   out_4161128495582430796[223] = 0;
   out_4161128495582430796[224] = 0;
   out_4161128495582430796[225] = 0;
   out_4161128495582430796[226] = 0;
   out_4161128495582430796[227] = 0;
   out_4161128495582430796[228] = 0;
   out_4161128495582430796[229] = 0;
   out_4161128495582430796[230] = 0;
   out_4161128495582430796[231] = 0;
   out_4161128495582430796[232] = 0;
   out_4161128495582430796[233] = 0;
   out_4161128495582430796[234] = 0;
   out_4161128495582430796[235] = 0;
   out_4161128495582430796[236] = 0;
   out_4161128495582430796[237] = 0;
   out_4161128495582430796[238] = 0;
   out_4161128495582430796[239] = 0;
   out_4161128495582430796[240] = 0;
   out_4161128495582430796[241] = 0;
   out_4161128495582430796[242] = 1;
   out_4161128495582430796[243] = 0;
   out_4161128495582430796[244] = 0;
   out_4161128495582430796[245] = 0;
   out_4161128495582430796[246] = 0;
   out_4161128495582430796[247] = 0;
   out_4161128495582430796[248] = 0;
   out_4161128495582430796[249] = 0;
   out_4161128495582430796[250] = 0;
   out_4161128495582430796[251] = 0;
   out_4161128495582430796[252] = 0;
   out_4161128495582430796[253] = 0;
   out_4161128495582430796[254] = 0;
   out_4161128495582430796[255] = 0;
   out_4161128495582430796[256] = 0;
   out_4161128495582430796[257] = 0;
   out_4161128495582430796[258] = 0;
   out_4161128495582430796[259] = 0;
   out_4161128495582430796[260] = 0;
   out_4161128495582430796[261] = 0;
   out_4161128495582430796[262] = 0;
   out_4161128495582430796[263] = 0;
   out_4161128495582430796[264] = 1;
   out_4161128495582430796[265] = 0;
   out_4161128495582430796[266] = 0;
   out_4161128495582430796[267] = 0;
   out_4161128495582430796[268] = 0;
   out_4161128495582430796[269] = 0;
   out_4161128495582430796[270] = 0;
   out_4161128495582430796[271] = 0;
   out_4161128495582430796[272] = 0;
   out_4161128495582430796[273] = 0;
   out_4161128495582430796[274] = 0;
   out_4161128495582430796[275] = 0;
   out_4161128495582430796[276] = 0;
   out_4161128495582430796[277] = 0;
   out_4161128495582430796[278] = 0;
   out_4161128495582430796[279] = 0;
   out_4161128495582430796[280] = 0;
   out_4161128495582430796[281] = 0;
   out_4161128495582430796[282] = 0;
   out_4161128495582430796[283] = 0;
   out_4161128495582430796[284] = 0;
   out_4161128495582430796[285] = 0;
   out_4161128495582430796[286] = 1;
   out_4161128495582430796[287] = 0;
   out_4161128495582430796[288] = 0;
   out_4161128495582430796[289] = 0;
   out_4161128495582430796[290] = 0;
   out_4161128495582430796[291] = 0;
   out_4161128495582430796[292] = 0;
   out_4161128495582430796[293] = 0;
   out_4161128495582430796[294] = 0;
   out_4161128495582430796[295] = 0;
   out_4161128495582430796[296] = 0;
   out_4161128495582430796[297] = 0;
   out_4161128495582430796[298] = 0;
   out_4161128495582430796[299] = 0;
   out_4161128495582430796[300] = 0;
   out_4161128495582430796[301] = 0;
   out_4161128495582430796[302] = 0;
   out_4161128495582430796[303] = 0;
   out_4161128495582430796[304] = 0;
   out_4161128495582430796[305] = 0;
   out_4161128495582430796[306] = 0;
   out_4161128495582430796[307] = 0;
   out_4161128495582430796[308] = 1;
   out_4161128495582430796[309] = 0;
   out_4161128495582430796[310] = 0;
   out_4161128495582430796[311] = 0;
   out_4161128495582430796[312] = 0;
   out_4161128495582430796[313] = 0;
   out_4161128495582430796[314] = 0;
   out_4161128495582430796[315] = 0;
   out_4161128495582430796[316] = 0;
   out_4161128495582430796[317] = 0;
   out_4161128495582430796[318] = 0;
   out_4161128495582430796[319] = 0;
   out_4161128495582430796[320] = 0;
   out_4161128495582430796[321] = 0;
   out_4161128495582430796[322] = 0;
   out_4161128495582430796[323] = 0;
   out_4161128495582430796[324] = 0;
   out_4161128495582430796[325] = 0;
   out_4161128495582430796[326] = 0;
   out_4161128495582430796[327] = 0;
   out_4161128495582430796[328] = 0;
   out_4161128495582430796[329] = 0;
   out_4161128495582430796[330] = 1;
   out_4161128495582430796[331] = 0;
   out_4161128495582430796[332] = 0;
   out_4161128495582430796[333] = 0;
   out_4161128495582430796[334] = 0;
   out_4161128495582430796[335] = 0;
   out_4161128495582430796[336] = 0;
   out_4161128495582430796[337] = 0;
   out_4161128495582430796[338] = 0;
   out_4161128495582430796[339] = 0;
   out_4161128495582430796[340] = 0;
   out_4161128495582430796[341] = 0;
   out_4161128495582430796[342] = 0;
   out_4161128495582430796[343] = 0;
   out_4161128495582430796[344] = 0;
   out_4161128495582430796[345] = 0;
   out_4161128495582430796[346] = 0;
   out_4161128495582430796[347] = 0;
   out_4161128495582430796[348] = 0;
   out_4161128495582430796[349] = 0;
   out_4161128495582430796[350] = 0;
   out_4161128495582430796[351] = 0;
   out_4161128495582430796[352] = 1;
   out_4161128495582430796[353] = 0;
   out_4161128495582430796[354] = 0;
   out_4161128495582430796[355] = 0;
   out_4161128495582430796[356] = 0;
   out_4161128495582430796[357] = 0;
   out_4161128495582430796[358] = 0;
   out_4161128495582430796[359] = 0;
   out_4161128495582430796[360] = 0;
   out_4161128495582430796[361] = 0;
   out_4161128495582430796[362] = 0;
   out_4161128495582430796[363] = 0;
   out_4161128495582430796[364] = 0;
   out_4161128495582430796[365] = 0;
   out_4161128495582430796[366] = 0;
   out_4161128495582430796[367] = 0;
   out_4161128495582430796[368] = 0;
   out_4161128495582430796[369] = 0;
   out_4161128495582430796[370] = 0;
   out_4161128495582430796[371] = 0;
   out_4161128495582430796[372] = 0;
   out_4161128495582430796[373] = 0;
   out_4161128495582430796[374] = 1;
   out_4161128495582430796[375] = 0;
   out_4161128495582430796[376] = 0;
   out_4161128495582430796[377] = 0;
   out_4161128495582430796[378] = 0;
   out_4161128495582430796[379] = 0;
   out_4161128495582430796[380] = 0;
   out_4161128495582430796[381] = 0;
   out_4161128495582430796[382] = 0;
   out_4161128495582430796[383] = 0;
   out_4161128495582430796[384] = 0;
   out_4161128495582430796[385] = 0;
   out_4161128495582430796[386] = 0;
   out_4161128495582430796[387] = 0;
   out_4161128495582430796[388] = 0;
   out_4161128495582430796[389] = 0;
   out_4161128495582430796[390] = 0;
   out_4161128495582430796[391] = 0;
   out_4161128495582430796[392] = 0;
   out_4161128495582430796[393] = 0;
   out_4161128495582430796[394] = 0;
   out_4161128495582430796[395] = 0;
   out_4161128495582430796[396] = 1;
   out_4161128495582430796[397] = 0;
   out_4161128495582430796[398] = 0;
   out_4161128495582430796[399] = 0;
   out_4161128495582430796[400] = 0;
   out_4161128495582430796[401] = 0;
   out_4161128495582430796[402] = 0;
   out_4161128495582430796[403] = 0;
   out_4161128495582430796[404] = 0;
   out_4161128495582430796[405] = 0;
   out_4161128495582430796[406] = 0;
   out_4161128495582430796[407] = 0;
   out_4161128495582430796[408] = 0;
   out_4161128495582430796[409] = 0;
   out_4161128495582430796[410] = 0;
   out_4161128495582430796[411] = 0;
   out_4161128495582430796[412] = 0;
   out_4161128495582430796[413] = 0;
   out_4161128495582430796[414] = 0;
   out_4161128495582430796[415] = 0;
   out_4161128495582430796[416] = 0;
   out_4161128495582430796[417] = 0;
   out_4161128495582430796[418] = 1;
   out_4161128495582430796[419] = 0;
   out_4161128495582430796[420] = 0;
   out_4161128495582430796[421] = 0;
   out_4161128495582430796[422] = 0;
   out_4161128495582430796[423] = 0;
   out_4161128495582430796[424] = 0;
   out_4161128495582430796[425] = 0;
   out_4161128495582430796[426] = 0;
   out_4161128495582430796[427] = 0;
   out_4161128495582430796[428] = 0;
   out_4161128495582430796[429] = 0;
   out_4161128495582430796[430] = 0;
   out_4161128495582430796[431] = 0;
   out_4161128495582430796[432] = 0;
   out_4161128495582430796[433] = 0;
   out_4161128495582430796[434] = 0;
   out_4161128495582430796[435] = 0;
   out_4161128495582430796[436] = 0;
   out_4161128495582430796[437] = 0;
   out_4161128495582430796[438] = 0;
   out_4161128495582430796[439] = 0;
   out_4161128495582430796[440] = 1;
}
void h_4(double *state, double *unused, double *out_307609936800723994) {
   out_307609936800723994[0] = state[10] + state[13];
   out_307609936800723994[1] = state[11] + state[14];
   out_307609936800723994[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8214539338947963896) {
   out_8214539338947963896[0] = 0;
   out_8214539338947963896[1] = 0;
   out_8214539338947963896[2] = 0;
   out_8214539338947963896[3] = 0;
   out_8214539338947963896[4] = 0;
   out_8214539338947963896[5] = 0;
   out_8214539338947963896[6] = 0;
   out_8214539338947963896[7] = 0;
   out_8214539338947963896[8] = 0;
   out_8214539338947963896[9] = 0;
   out_8214539338947963896[10] = 1;
   out_8214539338947963896[11] = 0;
   out_8214539338947963896[12] = 0;
   out_8214539338947963896[13] = 1;
   out_8214539338947963896[14] = 0;
   out_8214539338947963896[15] = 0;
   out_8214539338947963896[16] = 0;
   out_8214539338947963896[17] = 0;
   out_8214539338947963896[18] = 0;
   out_8214539338947963896[19] = 0;
   out_8214539338947963896[20] = 0;
   out_8214539338947963896[21] = 0;
   out_8214539338947963896[22] = 0;
   out_8214539338947963896[23] = 0;
   out_8214539338947963896[24] = 0;
   out_8214539338947963896[25] = 0;
   out_8214539338947963896[26] = 0;
   out_8214539338947963896[27] = 0;
   out_8214539338947963896[28] = 0;
   out_8214539338947963896[29] = 0;
   out_8214539338947963896[30] = 0;
   out_8214539338947963896[31] = 0;
   out_8214539338947963896[32] = 0;
   out_8214539338947963896[33] = 1;
   out_8214539338947963896[34] = 0;
   out_8214539338947963896[35] = 0;
   out_8214539338947963896[36] = 1;
   out_8214539338947963896[37] = 0;
   out_8214539338947963896[38] = 0;
   out_8214539338947963896[39] = 0;
   out_8214539338947963896[40] = 0;
   out_8214539338947963896[41] = 0;
   out_8214539338947963896[42] = 0;
   out_8214539338947963896[43] = 0;
   out_8214539338947963896[44] = 0;
   out_8214539338947963896[45] = 0;
   out_8214539338947963896[46] = 0;
   out_8214539338947963896[47] = 0;
   out_8214539338947963896[48] = 0;
   out_8214539338947963896[49] = 0;
   out_8214539338947963896[50] = 0;
   out_8214539338947963896[51] = 0;
   out_8214539338947963896[52] = 0;
   out_8214539338947963896[53] = 0;
   out_8214539338947963896[54] = 0;
   out_8214539338947963896[55] = 0;
   out_8214539338947963896[56] = 1;
   out_8214539338947963896[57] = 0;
   out_8214539338947963896[58] = 0;
   out_8214539338947963896[59] = 1;
   out_8214539338947963896[60] = 0;
   out_8214539338947963896[61] = 0;
   out_8214539338947963896[62] = 0;
   out_8214539338947963896[63] = 0;
   out_8214539338947963896[64] = 0;
   out_8214539338947963896[65] = 0;
}
void h_9(double *state, double *unused, double *out_9028607953761326231) {
   out_9028607953761326231[0] = state[10];
   out_9028607953761326231[1] = state[11];
   out_9028607953761326231[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7973349692318373251) {
   out_7973349692318373251[0] = 0;
   out_7973349692318373251[1] = 0;
   out_7973349692318373251[2] = 0;
   out_7973349692318373251[3] = 0;
   out_7973349692318373251[4] = 0;
   out_7973349692318373251[5] = 0;
   out_7973349692318373251[6] = 0;
   out_7973349692318373251[7] = 0;
   out_7973349692318373251[8] = 0;
   out_7973349692318373251[9] = 0;
   out_7973349692318373251[10] = 1;
   out_7973349692318373251[11] = 0;
   out_7973349692318373251[12] = 0;
   out_7973349692318373251[13] = 0;
   out_7973349692318373251[14] = 0;
   out_7973349692318373251[15] = 0;
   out_7973349692318373251[16] = 0;
   out_7973349692318373251[17] = 0;
   out_7973349692318373251[18] = 0;
   out_7973349692318373251[19] = 0;
   out_7973349692318373251[20] = 0;
   out_7973349692318373251[21] = 0;
   out_7973349692318373251[22] = 0;
   out_7973349692318373251[23] = 0;
   out_7973349692318373251[24] = 0;
   out_7973349692318373251[25] = 0;
   out_7973349692318373251[26] = 0;
   out_7973349692318373251[27] = 0;
   out_7973349692318373251[28] = 0;
   out_7973349692318373251[29] = 0;
   out_7973349692318373251[30] = 0;
   out_7973349692318373251[31] = 0;
   out_7973349692318373251[32] = 0;
   out_7973349692318373251[33] = 1;
   out_7973349692318373251[34] = 0;
   out_7973349692318373251[35] = 0;
   out_7973349692318373251[36] = 0;
   out_7973349692318373251[37] = 0;
   out_7973349692318373251[38] = 0;
   out_7973349692318373251[39] = 0;
   out_7973349692318373251[40] = 0;
   out_7973349692318373251[41] = 0;
   out_7973349692318373251[42] = 0;
   out_7973349692318373251[43] = 0;
   out_7973349692318373251[44] = 0;
   out_7973349692318373251[45] = 0;
   out_7973349692318373251[46] = 0;
   out_7973349692318373251[47] = 0;
   out_7973349692318373251[48] = 0;
   out_7973349692318373251[49] = 0;
   out_7973349692318373251[50] = 0;
   out_7973349692318373251[51] = 0;
   out_7973349692318373251[52] = 0;
   out_7973349692318373251[53] = 0;
   out_7973349692318373251[54] = 0;
   out_7973349692318373251[55] = 0;
   out_7973349692318373251[56] = 1;
   out_7973349692318373251[57] = 0;
   out_7973349692318373251[58] = 0;
   out_7973349692318373251[59] = 0;
   out_7973349692318373251[60] = 0;
   out_7973349692318373251[61] = 0;
   out_7973349692318373251[62] = 0;
   out_7973349692318373251[63] = 0;
   out_7973349692318373251[64] = 0;
   out_7973349692318373251[65] = 0;
}
void h_10(double *state, double *unused, double *out_9019171616117907999) {
   out_9019171616117907999[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9019171616117907999[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9019171616117907999[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8919668588098911707) {
   out_8919668588098911707[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8919668588098911707[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8919668588098911707[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8919668588098911707[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8919668588098911707[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8919668588098911707[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8919668588098911707[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8919668588098911707[7] = 0;
   out_8919668588098911707[8] = 0;
   out_8919668588098911707[9] = 0;
   out_8919668588098911707[10] = 0;
   out_8919668588098911707[11] = 0;
   out_8919668588098911707[12] = 0;
   out_8919668588098911707[13] = 0;
   out_8919668588098911707[14] = 0;
   out_8919668588098911707[15] = 0;
   out_8919668588098911707[16] = 1;
   out_8919668588098911707[17] = 0;
   out_8919668588098911707[18] = 0;
   out_8919668588098911707[19] = 1;
   out_8919668588098911707[20] = 0;
   out_8919668588098911707[21] = 0;
   out_8919668588098911707[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8919668588098911707[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8919668588098911707[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8919668588098911707[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8919668588098911707[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8919668588098911707[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8919668588098911707[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8919668588098911707[29] = 0;
   out_8919668588098911707[30] = 0;
   out_8919668588098911707[31] = 0;
   out_8919668588098911707[32] = 0;
   out_8919668588098911707[33] = 0;
   out_8919668588098911707[34] = 0;
   out_8919668588098911707[35] = 0;
   out_8919668588098911707[36] = 0;
   out_8919668588098911707[37] = 0;
   out_8919668588098911707[38] = 0;
   out_8919668588098911707[39] = 1;
   out_8919668588098911707[40] = 0;
   out_8919668588098911707[41] = 0;
   out_8919668588098911707[42] = 1;
   out_8919668588098911707[43] = 0;
   out_8919668588098911707[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8919668588098911707[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8919668588098911707[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8919668588098911707[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8919668588098911707[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8919668588098911707[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8919668588098911707[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8919668588098911707[51] = 0;
   out_8919668588098911707[52] = 0;
   out_8919668588098911707[53] = 0;
   out_8919668588098911707[54] = 0;
   out_8919668588098911707[55] = 0;
   out_8919668588098911707[56] = 0;
   out_8919668588098911707[57] = 0;
   out_8919668588098911707[58] = 0;
   out_8919668588098911707[59] = 0;
   out_8919668588098911707[60] = 0;
   out_8919668588098911707[61] = 0;
   out_8919668588098911707[62] = 1;
   out_8919668588098911707[63] = 0;
   out_8919668588098911707[64] = 0;
   out_8919668588098911707[65] = 1;
}
void h_12(double *state, double *unused, double *out_703346885059506475) {
   out_703346885059506475[0] = state[0];
   out_703346885059506475[1] = state[1];
   out_703346885059506475[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7593440313900370229) {
   out_7593440313900370229[0] = 1;
   out_7593440313900370229[1] = 0;
   out_7593440313900370229[2] = 0;
   out_7593440313900370229[3] = 0;
   out_7593440313900370229[4] = 0;
   out_7593440313900370229[5] = 0;
   out_7593440313900370229[6] = 0;
   out_7593440313900370229[7] = 0;
   out_7593440313900370229[8] = 0;
   out_7593440313900370229[9] = 0;
   out_7593440313900370229[10] = 0;
   out_7593440313900370229[11] = 0;
   out_7593440313900370229[12] = 0;
   out_7593440313900370229[13] = 0;
   out_7593440313900370229[14] = 0;
   out_7593440313900370229[15] = 0;
   out_7593440313900370229[16] = 0;
   out_7593440313900370229[17] = 0;
   out_7593440313900370229[18] = 0;
   out_7593440313900370229[19] = 0;
   out_7593440313900370229[20] = 0;
   out_7593440313900370229[21] = 0;
   out_7593440313900370229[22] = 0;
   out_7593440313900370229[23] = 1;
   out_7593440313900370229[24] = 0;
   out_7593440313900370229[25] = 0;
   out_7593440313900370229[26] = 0;
   out_7593440313900370229[27] = 0;
   out_7593440313900370229[28] = 0;
   out_7593440313900370229[29] = 0;
   out_7593440313900370229[30] = 0;
   out_7593440313900370229[31] = 0;
   out_7593440313900370229[32] = 0;
   out_7593440313900370229[33] = 0;
   out_7593440313900370229[34] = 0;
   out_7593440313900370229[35] = 0;
   out_7593440313900370229[36] = 0;
   out_7593440313900370229[37] = 0;
   out_7593440313900370229[38] = 0;
   out_7593440313900370229[39] = 0;
   out_7593440313900370229[40] = 0;
   out_7593440313900370229[41] = 0;
   out_7593440313900370229[42] = 0;
   out_7593440313900370229[43] = 0;
   out_7593440313900370229[44] = 0;
   out_7593440313900370229[45] = 0;
   out_7593440313900370229[46] = 1;
   out_7593440313900370229[47] = 0;
   out_7593440313900370229[48] = 0;
   out_7593440313900370229[49] = 0;
   out_7593440313900370229[50] = 0;
   out_7593440313900370229[51] = 0;
   out_7593440313900370229[52] = 0;
   out_7593440313900370229[53] = 0;
   out_7593440313900370229[54] = 0;
   out_7593440313900370229[55] = 0;
   out_7593440313900370229[56] = 0;
   out_7593440313900370229[57] = 0;
   out_7593440313900370229[58] = 0;
   out_7593440313900370229[59] = 0;
   out_7593440313900370229[60] = 0;
   out_7593440313900370229[61] = 0;
   out_7593440313900370229[62] = 0;
   out_7593440313900370229[63] = 0;
   out_7593440313900370229[64] = 0;
   out_7593440313900370229[65] = 0;
}
void h_35(double *state, double *unused, double *out_1633645418999018003) {
   out_1633645418999018003[0] = state[7];
   out_1633645418999018003[1] = state[8];
   out_1633645418999018003[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4847877281575356520) {
   out_4847877281575356520[0] = 0;
   out_4847877281575356520[1] = 0;
   out_4847877281575356520[2] = 0;
   out_4847877281575356520[3] = 0;
   out_4847877281575356520[4] = 0;
   out_4847877281575356520[5] = 0;
   out_4847877281575356520[6] = 0;
   out_4847877281575356520[7] = 1;
   out_4847877281575356520[8] = 0;
   out_4847877281575356520[9] = 0;
   out_4847877281575356520[10] = 0;
   out_4847877281575356520[11] = 0;
   out_4847877281575356520[12] = 0;
   out_4847877281575356520[13] = 0;
   out_4847877281575356520[14] = 0;
   out_4847877281575356520[15] = 0;
   out_4847877281575356520[16] = 0;
   out_4847877281575356520[17] = 0;
   out_4847877281575356520[18] = 0;
   out_4847877281575356520[19] = 0;
   out_4847877281575356520[20] = 0;
   out_4847877281575356520[21] = 0;
   out_4847877281575356520[22] = 0;
   out_4847877281575356520[23] = 0;
   out_4847877281575356520[24] = 0;
   out_4847877281575356520[25] = 0;
   out_4847877281575356520[26] = 0;
   out_4847877281575356520[27] = 0;
   out_4847877281575356520[28] = 0;
   out_4847877281575356520[29] = 0;
   out_4847877281575356520[30] = 1;
   out_4847877281575356520[31] = 0;
   out_4847877281575356520[32] = 0;
   out_4847877281575356520[33] = 0;
   out_4847877281575356520[34] = 0;
   out_4847877281575356520[35] = 0;
   out_4847877281575356520[36] = 0;
   out_4847877281575356520[37] = 0;
   out_4847877281575356520[38] = 0;
   out_4847877281575356520[39] = 0;
   out_4847877281575356520[40] = 0;
   out_4847877281575356520[41] = 0;
   out_4847877281575356520[42] = 0;
   out_4847877281575356520[43] = 0;
   out_4847877281575356520[44] = 0;
   out_4847877281575356520[45] = 0;
   out_4847877281575356520[46] = 0;
   out_4847877281575356520[47] = 0;
   out_4847877281575356520[48] = 0;
   out_4847877281575356520[49] = 0;
   out_4847877281575356520[50] = 0;
   out_4847877281575356520[51] = 0;
   out_4847877281575356520[52] = 0;
   out_4847877281575356520[53] = 1;
   out_4847877281575356520[54] = 0;
   out_4847877281575356520[55] = 0;
   out_4847877281575356520[56] = 0;
   out_4847877281575356520[57] = 0;
   out_4847877281575356520[58] = 0;
   out_4847877281575356520[59] = 0;
   out_4847877281575356520[60] = 0;
   out_4847877281575356520[61] = 0;
   out_4847877281575356520[62] = 0;
   out_4847877281575356520[63] = 0;
   out_4847877281575356520[64] = 0;
   out_4847877281575356520[65] = 0;
}
void h_32(double *state, double *unused, double *out_3891903989372884448) {
   out_3891903989372884448[0] = state[3];
   out_3891903989372884448[1] = state[4];
   out_3891903989372884448[2] = state[5];
   out_3891903989372884448[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4716712496634616051) {
   out_4716712496634616051[0] = 0;
   out_4716712496634616051[1] = 0;
   out_4716712496634616051[2] = 0;
   out_4716712496634616051[3] = 1;
   out_4716712496634616051[4] = 0;
   out_4716712496634616051[5] = 0;
   out_4716712496634616051[6] = 0;
   out_4716712496634616051[7] = 0;
   out_4716712496634616051[8] = 0;
   out_4716712496634616051[9] = 0;
   out_4716712496634616051[10] = 0;
   out_4716712496634616051[11] = 0;
   out_4716712496634616051[12] = 0;
   out_4716712496634616051[13] = 0;
   out_4716712496634616051[14] = 0;
   out_4716712496634616051[15] = 0;
   out_4716712496634616051[16] = 0;
   out_4716712496634616051[17] = 0;
   out_4716712496634616051[18] = 0;
   out_4716712496634616051[19] = 0;
   out_4716712496634616051[20] = 0;
   out_4716712496634616051[21] = 0;
   out_4716712496634616051[22] = 0;
   out_4716712496634616051[23] = 0;
   out_4716712496634616051[24] = 0;
   out_4716712496634616051[25] = 0;
   out_4716712496634616051[26] = 1;
   out_4716712496634616051[27] = 0;
   out_4716712496634616051[28] = 0;
   out_4716712496634616051[29] = 0;
   out_4716712496634616051[30] = 0;
   out_4716712496634616051[31] = 0;
   out_4716712496634616051[32] = 0;
   out_4716712496634616051[33] = 0;
   out_4716712496634616051[34] = 0;
   out_4716712496634616051[35] = 0;
   out_4716712496634616051[36] = 0;
   out_4716712496634616051[37] = 0;
   out_4716712496634616051[38] = 0;
   out_4716712496634616051[39] = 0;
   out_4716712496634616051[40] = 0;
   out_4716712496634616051[41] = 0;
   out_4716712496634616051[42] = 0;
   out_4716712496634616051[43] = 0;
   out_4716712496634616051[44] = 0;
   out_4716712496634616051[45] = 0;
   out_4716712496634616051[46] = 0;
   out_4716712496634616051[47] = 0;
   out_4716712496634616051[48] = 0;
   out_4716712496634616051[49] = 1;
   out_4716712496634616051[50] = 0;
   out_4716712496634616051[51] = 0;
   out_4716712496634616051[52] = 0;
   out_4716712496634616051[53] = 0;
   out_4716712496634616051[54] = 0;
   out_4716712496634616051[55] = 0;
   out_4716712496634616051[56] = 0;
   out_4716712496634616051[57] = 0;
   out_4716712496634616051[58] = 0;
   out_4716712496634616051[59] = 0;
   out_4716712496634616051[60] = 0;
   out_4716712496634616051[61] = 0;
   out_4716712496634616051[62] = 0;
   out_4716712496634616051[63] = 0;
   out_4716712496634616051[64] = 0;
   out_4716712496634616051[65] = 0;
   out_4716712496634616051[66] = 0;
   out_4716712496634616051[67] = 0;
   out_4716712496634616051[68] = 0;
   out_4716712496634616051[69] = 0;
   out_4716712496634616051[70] = 0;
   out_4716712496634616051[71] = 0;
   out_4716712496634616051[72] = 1;
   out_4716712496634616051[73] = 0;
   out_4716712496634616051[74] = 0;
   out_4716712496634616051[75] = 0;
   out_4716712496634616051[76] = 0;
   out_4716712496634616051[77] = 0;
   out_4716712496634616051[78] = 0;
   out_4716712496634616051[79] = 0;
   out_4716712496634616051[80] = 0;
   out_4716712496634616051[81] = 0;
   out_4716712496634616051[82] = 0;
   out_4716712496634616051[83] = 0;
   out_4716712496634616051[84] = 0;
   out_4716712496634616051[85] = 0;
   out_4716712496634616051[86] = 0;
   out_4716712496634616051[87] = 0;
}
void h_13(double *state, double *unused, double *out_786724181952337315) {
   out_786724181952337315[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_786724181952337315[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_786724181952337315[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7488329551323887377) {
   out_7488329551323887377[0] = 0;
   out_7488329551323887377[1] = 0;
   out_7488329551323887377[2] = 0;
   out_7488329551323887377[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7488329551323887377[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7488329551323887377[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7488329551323887377[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7488329551323887377[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7488329551323887377[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7488329551323887377[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7488329551323887377[10] = 0;
   out_7488329551323887377[11] = 0;
   out_7488329551323887377[12] = 0;
   out_7488329551323887377[13] = 0;
   out_7488329551323887377[14] = 0;
   out_7488329551323887377[15] = 0;
   out_7488329551323887377[16] = 0;
   out_7488329551323887377[17] = 0;
   out_7488329551323887377[18] = 0;
   out_7488329551323887377[19] = 0;
   out_7488329551323887377[20] = 0;
   out_7488329551323887377[21] = 0;
   out_7488329551323887377[22] = 0;
   out_7488329551323887377[23] = 0;
   out_7488329551323887377[24] = 0;
   out_7488329551323887377[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7488329551323887377[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7488329551323887377[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7488329551323887377[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7488329551323887377[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7488329551323887377[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7488329551323887377[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7488329551323887377[32] = 0;
   out_7488329551323887377[33] = 0;
   out_7488329551323887377[34] = 0;
   out_7488329551323887377[35] = 0;
   out_7488329551323887377[36] = 0;
   out_7488329551323887377[37] = 0;
   out_7488329551323887377[38] = 0;
   out_7488329551323887377[39] = 0;
   out_7488329551323887377[40] = 0;
   out_7488329551323887377[41] = 0;
   out_7488329551323887377[42] = 0;
   out_7488329551323887377[43] = 0;
   out_7488329551323887377[44] = 0;
   out_7488329551323887377[45] = 0;
   out_7488329551323887377[46] = 0;
   out_7488329551323887377[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7488329551323887377[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7488329551323887377[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7488329551323887377[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7488329551323887377[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7488329551323887377[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7488329551323887377[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7488329551323887377[54] = 0;
   out_7488329551323887377[55] = 0;
   out_7488329551323887377[56] = 0;
   out_7488329551323887377[57] = 0;
   out_7488329551323887377[58] = 0;
   out_7488329551323887377[59] = 0;
   out_7488329551323887377[60] = 0;
   out_7488329551323887377[61] = 0;
   out_7488329551323887377[62] = 0;
   out_7488329551323887377[63] = 0;
   out_7488329551323887377[64] = 0;
   out_7488329551323887377[65] = 0;
}
void h_14(double *state, double *unused, double *out_9028607953761326231) {
   out_9028607953761326231[0] = state[10];
   out_9028607953761326231[1] = state[11];
   out_9028607953761326231[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7973349692318373251) {
   out_7973349692318373251[0] = 0;
   out_7973349692318373251[1] = 0;
   out_7973349692318373251[2] = 0;
   out_7973349692318373251[3] = 0;
   out_7973349692318373251[4] = 0;
   out_7973349692318373251[5] = 0;
   out_7973349692318373251[6] = 0;
   out_7973349692318373251[7] = 0;
   out_7973349692318373251[8] = 0;
   out_7973349692318373251[9] = 0;
   out_7973349692318373251[10] = 1;
   out_7973349692318373251[11] = 0;
   out_7973349692318373251[12] = 0;
   out_7973349692318373251[13] = 0;
   out_7973349692318373251[14] = 0;
   out_7973349692318373251[15] = 0;
   out_7973349692318373251[16] = 0;
   out_7973349692318373251[17] = 0;
   out_7973349692318373251[18] = 0;
   out_7973349692318373251[19] = 0;
   out_7973349692318373251[20] = 0;
   out_7973349692318373251[21] = 0;
   out_7973349692318373251[22] = 0;
   out_7973349692318373251[23] = 0;
   out_7973349692318373251[24] = 0;
   out_7973349692318373251[25] = 0;
   out_7973349692318373251[26] = 0;
   out_7973349692318373251[27] = 0;
   out_7973349692318373251[28] = 0;
   out_7973349692318373251[29] = 0;
   out_7973349692318373251[30] = 0;
   out_7973349692318373251[31] = 0;
   out_7973349692318373251[32] = 0;
   out_7973349692318373251[33] = 1;
   out_7973349692318373251[34] = 0;
   out_7973349692318373251[35] = 0;
   out_7973349692318373251[36] = 0;
   out_7973349692318373251[37] = 0;
   out_7973349692318373251[38] = 0;
   out_7973349692318373251[39] = 0;
   out_7973349692318373251[40] = 0;
   out_7973349692318373251[41] = 0;
   out_7973349692318373251[42] = 0;
   out_7973349692318373251[43] = 0;
   out_7973349692318373251[44] = 0;
   out_7973349692318373251[45] = 0;
   out_7973349692318373251[46] = 0;
   out_7973349692318373251[47] = 0;
   out_7973349692318373251[48] = 0;
   out_7973349692318373251[49] = 0;
   out_7973349692318373251[50] = 0;
   out_7973349692318373251[51] = 0;
   out_7973349692318373251[52] = 0;
   out_7973349692318373251[53] = 0;
   out_7973349692318373251[54] = 0;
   out_7973349692318373251[55] = 0;
   out_7973349692318373251[56] = 1;
   out_7973349692318373251[57] = 0;
   out_7973349692318373251[58] = 0;
   out_7973349692318373251[59] = 0;
   out_7973349692318373251[60] = 0;
   out_7973349692318373251[61] = 0;
   out_7973349692318373251[62] = 0;
   out_7973349692318373251[63] = 0;
   out_7973349692318373251[64] = 0;
   out_7973349692318373251[65] = 0;
}
void h_33(double *state, double *unused, double *out_1221708896165955769) {
   out_1221708896165955769[0] = state[16];
   out_1221708896165955769[1] = state[17];
   out_1221708896165955769[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1697320276936498916) {
   out_1697320276936498916[0] = 0;
   out_1697320276936498916[1] = 0;
   out_1697320276936498916[2] = 0;
   out_1697320276936498916[3] = 0;
   out_1697320276936498916[4] = 0;
   out_1697320276936498916[5] = 0;
   out_1697320276936498916[6] = 0;
   out_1697320276936498916[7] = 0;
   out_1697320276936498916[8] = 0;
   out_1697320276936498916[9] = 0;
   out_1697320276936498916[10] = 0;
   out_1697320276936498916[11] = 0;
   out_1697320276936498916[12] = 0;
   out_1697320276936498916[13] = 0;
   out_1697320276936498916[14] = 0;
   out_1697320276936498916[15] = 0;
   out_1697320276936498916[16] = 1;
   out_1697320276936498916[17] = 0;
   out_1697320276936498916[18] = 0;
   out_1697320276936498916[19] = 0;
   out_1697320276936498916[20] = 0;
   out_1697320276936498916[21] = 0;
   out_1697320276936498916[22] = 0;
   out_1697320276936498916[23] = 0;
   out_1697320276936498916[24] = 0;
   out_1697320276936498916[25] = 0;
   out_1697320276936498916[26] = 0;
   out_1697320276936498916[27] = 0;
   out_1697320276936498916[28] = 0;
   out_1697320276936498916[29] = 0;
   out_1697320276936498916[30] = 0;
   out_1697320276936498916[31] = 0;
   out_1697320276936498916[32] = 0;
   out_1697320276936498916[33] = 0;
   out_1697320276936498916[34] = 0;
   out_1697320276936498916[35] = 0;
   out_1697320276936498916[36] = 0;
   out_1697320276936498916[37] = 0;
   out_1697320276936498916[38] = 0;
   out_1697320276936498916[39] = 1;
   out_1697320276936498916[40] = 0;
   out_1697320276936498916[41] = 0;
   out_1697320276936498916[42] = 0;
   out_1697320276936498916[43] = 0;
   out_1697320276936498916[44] = 0;
   out_1697320276936498916[45] = 0;
   out_1697320276936498916[46] = 0;
   out_1697320276936498916[47] = 0;
   out_1697320276936498916[48] = 0;
   out_1697320276936498916[49] = 0;
   out_1697320276936498916[50] = 0;
   out_1697320276936498916[51] = 0;
   out_1697320276936498916[52] = 0;
   out_1697320276936498916[53] = 0;
   out_1697320276936498916[54] = 0;
   out_1697320276936498916[55] = 0;
   out_1697320276936498916[56] = 0;
   out_1697320276936498916[57] = 0;
   out_1697320276936498916[58] = 0;
   out_1697320276936498916[59] = 0;
   out_1697320276936498916[60] = 0;
   out_1697320276936498916[61] = 0;
   out_1697320276936498916[62] = 1;
   out_1697320276936498916[63] = 0;
   out_1697320276936498916[64] = 0;
   out_1697320276936498916[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4099822328291796061) {
  H(in_vec, out_4099822328291796061);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2280464617631615560) {
  err_fun(nom_x, delta_x, out_2280464617631615560);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9046333686982459057) {
  inv_err_fun(nom_x, true_x, out_9046333686982459057);
}
void live_H_mod_fun(double *state, double *out_3010053490760277106) {
  H_mod_fun(state, out_3010053490760277106);
}
void live_f_fun(double *state, double dt, double *out_57496166683870770) {
  f_fun(state,  dt, out_57496166683870770);
}
void live_F_fun(double *state, double dt, double *out_4161128495582430796) {
  F_fun(state,  dt, out_4161128495582430796);
}
void live_h_4(double *state, double *unused, double *out_307609936800723994) {
  h_4(state, unused, out_307609936800723994);
}
void live_H_4(double *state, double *unused, double *out_8214539338947963896) {
  H_4(state, unused, out_8214539338947963896);
}
void live_h_9(double *state, double *unused, double *out_9028607953761326231) {
  h_9(state, unused, out_9028607953761326231);
}
void live_H_9(double *state, double *unused, double *out_7973349692318373251) {
  H_9(state, unused, out_7973349692318373251);
}
void live_h_10(double *state, double *unused, double *out_9019171616117907999) {
  h_10(state, unused, out_9019171616117907999);
}
void live_H_10(double *state, double *unused, double *out_8919668588098911707) {
  H_10(state, unused, out_8919668588098911707);
}
void live_h_12(double *state, double *unused, double *out_703346885059506475) {
  h_12(state, unused, out_703346885059506475);
}
void live_H_12(double *state, double *unused, double *out_7593440313900370229) {
  H_12(state, unused, out_7593440313900370229);
}
void live_h_35(double *state, double *unused, double *out_1633645418999018003) {
  h_35(state, unused, out_1633645418999018003);
}
void live_H_35(double *state, double *unused, double *out_4847877281575356520) {
  H_35(state, unused, out_4847877281575356520);
}
void live_h_32(double *state, double *unused, double *out_3891903989372884448) {
  h_32(state, unused, out_3891903989372884448);
}
void live_H_32(double *state, double *unused, double *out_4716712496634616051) {
  H_32(state, unused, out_4716712496634616051);
}
void live_h_13(double *state, double *unused, double *out_786724181952337315) {
  h_13(state, unused, out_786724181952337315);
}
void live_H_13(double *state, double *unused, double *out_7488329551323887377) {
  H_13(state, unused, out_7488329551323887377);
}
void live_h_14(double *state, double *unused, double *out_9028607953761326231) {
  h_14(state, unused, out_9028607953761326231);
}
void live_H_14(double *state, double *unused, double *out_7973349692318373251) {
  H_14(state, unused, out_7973349692318373251);
}
void live_h_33(double *state, double *unused, double *out_1221708896165955769) {
  h_33(state, unused, out_1221708896165955769);
}
void live_H_33(double *state, double *unused, double *out_1697320276936498916) {
  H_33(state, unused, out_1697320276936498916);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
